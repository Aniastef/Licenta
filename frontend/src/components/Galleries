import React, { useState } from "react";
import {
  Box,
  Heading,
  Flex,
  Text,
  Image,
  Select,
  Input,
} from "@chakra-ui/react";
import RectangleShape from "../assets/rectangleShape";

const ExploreGalleries = () => {
  const allGalleries = [
    {
      id: 1,
      name: "Modern Art Gallery",
      category: "Painting",
      creatorName: "John Doe",
      description: "A collection of modern and abstract paintings.",
      coverPhoto: "https://via.placeholder.com/400x200",
    },
    {
      id: 2,
      name: "Sculpture Studio",
      category: "Sculpture",
      creatorName: "Jane Smith",
      description: "A studio showcasing intricate sculptures.",
      coverPhoto: "https://via.placeholder.com/400x200",
    },
    {
      id: 3,
      name: "Photography World",
      category: "Photography",
      creatorName: "Anna Lee",
      description: "Captivating photographs from around the world.",
      coverPhoto: "https://via.placeholder.com/400x200",
    },
    {
      id: 4,
      name: "Abstract Wonders",
      category: "Painting",
      creatorName: "Mark Taylor",
      description: "Abstract art that challenges the imagination.",
      coverPhoto: "https://via.placeholder.com/400x200",
    },
  ];

  const [searchBy, setSearchBy] = useState("name"); // Criteriul de căutare selectat
  const [searchValue, setSearchValue] = useState(""); // Valoarea căutată
  const [sortOrder, setSortOrder] = useState("asc"); // Ordinea sortării
  const [categoryFilter, setCategoryFilter] = useState(""); // Filtrare pe categorie

  // Filtrare și sortare galerii
  const filteredGalleries = allGalleries
    .filter((gallery) => {
      const matchesName =
        searchBy === "name" &&
        gallery.name.toLowerCase().includes(searchValue.toLowerCase());
      const matchesCreator =
        searchBy === "creator" &&
        gallery.creatorName.toLowerCase().includes(searchValue.toLowerCase());
      const matchesCategory = categoryFilter
        ? gallery.category === categoryFilter
        : true;

      return (matchesName || matchesCreator) && matchesCategory;
    })
    .sort((a, b) => {
      if (sortOrder === "asc") {
        return a.name.localeCompare(b.name);
      } else {
        return b.name.localeCompare(a.name);
      }
    });

  return (
    <Box mt={8}>
      <RectangleShape
        bgColor="teal.300"
        title="Explore Galleries"
        minW="300px"
        maxW="300px"
        minH="80px"
        textAlign="left"
      />

      {/* Bara de căutare combinată și sortare */}
      <Flex mt={4} mb={5} justify="space-between" wrap="wrap" gap={4}>
        <Flex direction="row" alignItems="center" gap={4}>
          <RectangleShape
            bgColor="yellow.300"
            title="Search by"
            minW="100px"
            maxW="100px"
            minH="20px"
            textAlign="left"
          />
          <Select
            w="150px"
            bg="gray.100"
            value={searchBy}
            onChange={(e) => setSearchBy(e.target.value)}
          >
            <option value="name">Gallery Name</option>
            <option value="creator">Creator</option>
          </Select>
          <Input
            placeholder={`Search by ${searchBy}...`}
            value={searchValue}
            onChange={(e) => setSearchValue(e.target.value)}
            w="300px"
            bg="gray.100"
          />
        </Flex>

        <Flex direction="row" alignItems="center" gap={4}>
          <RectangleShape
            bgColor="yellow.300"
            title="Filter by"
            minW="100px"
            maxW="100px"
            minH="20px"
            textAlign="left"
          />
          <Select
            placeholder="Category"
            w="150px"
            bg="gray.100"
            value={categoryFilter}
            onChange={(e) => setCategoryFilter(e.target.value)}
          >
            <option value="Painting">Painting</option>
            <option value="Sculpture">Sculpture</option>
            <option value="Photography">Photography</option>
          </Select>
          <Select
            placeholder="Sort by Name"
            w="150px"
            bg="gray.100"
            value={sortOrder}
            onChange={(e) => setSortOrder(e.target.value)}
          >
            <option value="asc">A-Z</option>
            <option value="desc">Z-A</option>
          </Select>
        </Flex>
      </Flex>

      {/* Lista de galerii */}
      <Flex direction="column" px={5}>
        {filteredGalleries.length > 0 ? (
          filteredGalleries.map((gallery) => (
            <Box key={gallery.id} bg="gray.200" p={4} mb={4} borderRadius="md">
              <Box
                width="100%"
                height="200px"
                bg="gray.300"
                mb={4}
                borderRadius="md"
                overflow="hidden"
              >
                <Image
                  src={gallery.coverPhoto}
                  alt={`${gallery.name} cover`}
                  width="100%"
                  height="100%"
                  objectFit="cover"
                />
              </Box>
              <Flex direction="row" justify="space-between" align="center" mb={2}>
                <Heading size="md">{gallery.name}</Heading>
                <Text>Category: {gallery.category}</Text>
              </Flex>
              <Text mb={1}>Created by: {gallery.creatorName}</Text>
              <Text>{gallery.description}</Text>
            </Box>
          ))
        ) : (
          <Text mt={5} textAlign="center" color="gray.500">
            No galleries found.
          </Text>
        )}
      </Flex>
    </Box>
  );
};

export default ExploreGalleries;
